// Code generated by protols (pathbuilder). DO NOT EDIT.
// source: github.com/kralicky/protocompile/ast/ast.proto

package ast

import (
	protopath "google.golang.org/protobuf/reflect/protopath"
)

type (
	fileInfoPathBuilder                  protopath.Path
	fileInfo_CommentInfoPathBuilder      protopath.Path
	fileInfo_ItemSpanPathBuilder         protopath.Path
	fileElementPathBuilder               protopath.Path
	importNodePathBuilder                protopath.Path
	identNodePathBuilder                 protopath.Path
	stringValueNodePathBuilder           protopath.Path
	stringLiteralNodePathBuilder         protopath.Path
	compoundStringLiteralNodePathBuilder protopath.Path
	runeNodePathBuilder                  protopath.Path
	packageNodePathBuilder               protopath.Path
	identValueNodePathBuilder            protopath.Path
	compoundIdentNodePathBuilder         protopath.Path
	complexIdentComponentPathBuilder     protopath.Path
	fieldReferenceNodePathBuilder        protopath.Path
	optionNodePathBuilder                protopath.Path
	optionNameNodePathBuilder            protopath.Path
	valueNodePathBuilder                 protopath.Path
	uintLiteralNodePathBuilder           protopath.Path
	negativeIntLiteralNodePathBuilder    protopath.Path
	floatLiteralNodePathBuilder          protopath.Path
	specialFloatLiteralNodePathBuilder   protopath.Path
	signedFloatLiteralNodePathBuilder    protopath.Path
	floatValueNodePathBuilder            protopath.Path
	arrayLiteralNodePathBuilder          protopath.Path
	arrayLiteralElementPathBuilder       protopath.Path
	messageLiteralNodePathBuilder        protopath.Path
	messageFieldNodePathBuilder          protopath.Path
	messageNodePathBuilder               protopath.Path
	messageElementPathBuilder            protopath.Path
	fieldNodePathBuilder                 protopath.Path
	compactOptionsNodePathBuilder        protopath.Path
	mapFieldNodePathBuilder              protopath.Path
	mapTypeNodePathBuilder               protopath.Path
	oneofNodePathBuilder                 protopath.Path
	oneofElementPathBuilder              protopath.Path
	groupNodePathBuilder                 protopath.Path
	enumNodePathBuilder                  protopath.Path
	enumElementPathBuilder               protopath.Path
	enumValueNodePathBuilder             protopath.Path
	intValueNodePathBuilder              protopath.Path
	reservedNodePathBuilder              protopath.Path
	reservedElementPathBuilder           protopath.Path
	rangeNodePathBuilder                 protopath.Path
	extendNodePathBuilder                protopath.Path
	extendElementPathBuilder             protopath.Path
	emptyDeclNodePathBuilder             protopath.Path
	extensionRangeNodePathBuilder        protopath.Path
	rangeElementPathBuilder              protopath.Path
	serviceNodePathBuilder               protopath.Path
	serviceElementPathBuilder            protopath.Path
	rPCNodePathBuilder                   protopath.Path
	rPCTypeNodePathBuilder               protopath.Path
	rPCElementPathBuilder                protopath.Path
	errorNodePathBuilder                 protopath.Path
	syntaxNodePathBuilder                protopath.Path
	editionNodePathBuilder               protopath.Path
	messageDeclNodePathBuilder           protopath.Path
	syntheticMapFieldPathBuilder         protopath.Path
	fieldDeclNodePathBuilder             protopath.Path
	noSourceNodePathBuilder              protopath.Path
)

func (*FileInfo) ProtoPath() fileInfoPathBuilder {
	return fileInfoPathBuilder{protopath.Root(((*FileInfo)(nil)).ProtoReflect().Descriptor())}
}
func (*FileElement) ProtoPath() fileElementPathBuilder {
	return fileElementPathBuilder{protopath.Root(((*FileElement)(nil)).ProtoReflect().Descriptor())}
}
func (*SyntaxNode) ProtoPath() syntaxNodePathBuilder {
	return syntaxNodePathBuilder{protopath.Root(((*SyntaxNode)(nil)).ProtoReflect().Descriptor())}
}
func (*IdentNode) ProtoPath() identNodePathBuilder {
	return identNodePathBuilder{protopath.Root(((*IdentNode)(nil)).ProtoReflect().Descriptor())}
}
func (*EmptyDeclNode) ProtoPath() emptyDeclNodePathBuilder {
	return emptyDeclNodePathBuilder{protopath.Root(((*EmptyDeclNode)(nil)).ProtoReflect().Descriptor())}
}
func (*CompoundIdentNode) ProtoPath() compoundIdentNodePathBuilder {
	return compoundIdentNodePathBuilder{protopath.Root(((*CompoundIdentNode)(nil)).ProtoReflect().Descriptor())}
}
func (*ComplexIdentComponent) ProtoPath() complexIdentComponentPathBuilder {
	return complexIdentComponentPathBuilder{protopath.Root(((*ComplexIdentComponent)(nil)).ProtoReflect().Descriptor())}
}
func (*EditionNode) ProtoPath() editionNodePathBuilder {
	return editionNodePathBuilder{protopath.Root(((*EditionNode)(nil)).ProtoReflect().Descriptor())}
}
func (*ImportNode) ProtoPath() importNodePathBuilder {
	return importNodePathBuilder{protopath.Root(((*ImportNode)(nil)).ProtoReflect().Descriptor())}
}
func (*PackageNode) ProtoPath() packageNodePathBuilder {
	return packageNodePathBuilder{protopath.Root(((*PackageNode)(nil)).ProtoReflect().Descriptor())}
}
func (*UintLiteralNode) ProtoPath() uintLiteralNodePathBuilder {
	return uintLiteralNodePathBuilder{protopath.Root(((*UintLiteralNode)(nil)).ProtoReflect().Descriptor())}
}
func (*OptionNode) ProtoPath() optionNodePathBuilder {
	return optionNodePathBuilder{protopath.Root(((*OptionNode)(nil)).ProtoReflect().Descriptor())}
}
func (*NegativeIntLiteralNode) ProtoPath() negativeIntLiteralNodePathBuilder {
	return negativeIntLiteralNodePathBuilder{protopath.Root(((*NegativeIntLiteralNode)(nil)).ProtoReflect().Descriptor())}
}
func (*FloatLiteralNode) ProtoPath() floatLiteralNodePathBuilder {
	return floatLiteralNodePathBuilder{protopath.Root(((*FloatLiteralNode)(nil)).ProtoReflect().Descriptor())}
}
func (*RuneNode) ProtoPath() runeNodePathBuilder {
	return runeNodePathBuilder{protopath.Root(((*RuneNode)(nil)).ProtoReflect().Descriptor())}
}
func (*StringValueNode) ProtoPath() stringValueNodePathBuilder {
	return stringValueNodePathBuilder{protopath.Root(((*StringValueNode)(nil)).ProtoReflect().Descriptor())}
}
func (*ErrorNode) ProtoPath() errorNodePathBuilder {
	return errorNodePathBuilder{protopath.Root(((*ErrorNode)(nil)).ProtoReflect().Descriptor())}
}
func (*StringLiteralNode) ProtoPath() stringLiteralNodePathBuilder {
	return stringLiteralNodePathBuilder{protopath.Root(((*StringLiteralNode)(nil)).ProtoReflect().Descriptor())}
}
func (*CompoundStringLiteralNode) ProtoPath() compoundStringLiteralNodePathBuilder {
	return compoundStringLiteralNodePathBuilder{protopath.Root(((*CompoundStringLiteralNode)(nil)).ProtoReflect().Descriptor())}
}
func (*IdentValueNode) ProtoPath() identValueNodePathBuilder {
	return identValueNodePathBuilder{protopath.Root(((*IdentValueNode)(nil)).ProtoReflect().Descriptor())}
}
func (*OptionNameNode) ProtoPath() optionNameNodePathBuilder {
	return optionNameNodePathBuilder{protopath.Root(((*OptionNameNode)(nil)).ProtoReflect().Descriptor())}
}
func (*FieldReferenceNode) ProtoPath() fieldReferenceNodePathBuilder {
	return fieldReferenceNodePathBuilder{protopath.Root(((*FieldReferenceNode)(nil)).ProtoReflect().Descriptor())}
}
func (*ValueNode) ProtoPath() valueNodePathBuilder {
	return valueNodePathBuilder{protopath.Root(((*ValueNode)(nil)).ProtoReflect().Descriptor())}
}
func (*SpecialFloatLiteralNode) ProtoPath() specialFloatLiteralNodePathBuilder {
	return specialFloatLiteralNodePathBuilder{protopath.Root(((*SpecialFloatLiteralNode)(nil)).ProtoReflect().Descriptor())}
}
func (*SignedFloatLiteralNode) ProtoPath() signedFloatLiteralNodePathBuilder {
	return signedFloatLiteralNodePathBuilder{protopath.Root(((*SignedFloatLiteralNode)(nil)).ProtoReflect().Descriptor())}
}
func (*ArrayLiteralNode) ProtoPath() arrayLiteralNodePathBuilder {
	return arrayLiteralNodePathBuilder{protopath.Root(((*ArrayLiteralNode)(nil)).ProtoReflect().Descriptor())}
}
func (*ArrayLiteralElement) ProtoPath() arrayLiteralElementPathBuilder {
	return arrayLiteralElementPathBuilder{protopath.Root(((*ArrayLiteralElement)(nil)).ProtoReflect().Descriptor())}
}
func (*MessageLiteralNode) ProtoPath() messageLiteralNodePathBuilder {
	return messageLiteralNodePathBuilder{protopath.Root(((*MessageLiteralNode)(nil)).ProtoReflect().Descriptor())}
}
func (*FloatValueNode) ProtoPath() floatValueNodePathBuilder {
	return floatValueNodePathBuilder{protopath.Root(((*FloatValueNode)(nil)).ProtoReflect().Descriptor())}
}
func (*MessageFieldNode) ProtoPath() messageFieldNodePathBuilder {
	return messageFieldNodePathBuilder{protopath.Root(((*MessageFieldNode)(nil)).ProtoReflect().Descriptor())}
}
func (*CompactOptionsNode) ProtoPath() compactOptionsNodePathBuilder {
	return compactOptionsNodePathBuilder{protopath.Root(((*CompactOptionsNode)(nil)).ProtoReflect().Descriptor())}
}
func (*MessageDeclNode) ProtoPath() messageDeclNodePathBuilder {
	return messageDeclNodePathBuilder{protopath.Root(((*MessageDeclNode)(nil)).ProtoReflect().Descriptor())}
}
func (*MessageNode) ProtoPath() messageNodePathBuilder {
	return messageNodePathBuilder{protopath.Root(((*MessageNode)(nil)).ProtoReflect().Descriptor())}
}
func (*MessageElement) ProtoPath() messageElementPathBuilder {
	return messageElementPathBuilder{protopath.Root(((*MessageElement)(nil)).ProtoReflect().Descriptor())}
}
func (*ExtendElement) ProtoPath() extendElementPathBuilder {
	return extendElementPathBuilder{protopath.Root(((*ExtendElement)(nil)).ProtoReflect().Descriptor())}
}
func (*FieldNode) ProtoPath() fieldNodePathBuilder {
	return fieldNodePathBuilder{protopath.Root(((*FieldNode)(nil)).ProtoReflect().Descriptor())}
}
func (*MapFieldNode) ProtoPath() mapFieldNodePathBuilder {
	return mapFieldNodePathBuilder{protopath.Root(((*MapFieldNode)(nil)).ProtoReflect().Descriptor())}
}
func (*OneofNode) ProtoPath() oneofNodePathBuilder {
	return oneofNodePathBuilder{protopath.Root(((*OneofNode)(nil)).ProtoReflect().Descriptor())}
}
func (*GroupNode) ProtoPath() groupNodePathBuilder {
	return groupNodePathBuilder{protopath.Root(((*GroupNode)(nil)).ProtoReflect().Descriptor())}
}
func (*EnumNode) ProtoPath() enumNodePathBuilder {
	return enumNodePathBuilder{protopath.Root(((*EnumNode)(nil)).ProtoReflect().Descriptor())}
}
func (*ExtendNode) ProtoPath() extendNodePathBuilder {
	return extendNodePathBuilder{protopath.Root(((*ExtendNode)(nil)).ProtoReflect().Descriptor())}
}
func (*ExtensionRangeNode) ProtoPath() extensionRangeNodePathBuilder {
	return extensionRangeNodePathBuilder{protopath.Root(((*ExtensionRangeNode)(nil)).ProtoReflect().Descriptor())}
}
func (*RangeElement) ProtoPath() rangeElementPathBuilder {
	return rangeElementPathBuilder{protopath.Root(((*RangeElement)(nil)).ProtoReflect().Descriptor())}
}
func (*ReservedNode) ProtoPath() reservedNodePathBuilder {
	return reservedNodePathBuilder{protopath.Root(((*ReservedNode)(nil)).ProtoReflect().Descriptor())}
}
func (*ReservedElement) ProtoPath() reservedElementPathBuilder {
	return reservedElementPathBuilder{protopath.Root(((*ReservedElement)(nil)).ProtoReflect().Descriptor())}
}
func (*MapTypeNode) ProtoPath() mapTypeNodePathBuilder {
	return mapTypeNodePathBuilder{protopath.Root(((*MapTypeNode)(nil)).ProtoReflect().Descriptor())}
}
func (*OneofElement) ProtoPath() oneofElementPathBuilder {
	return oneofElementPathBuilder{protopath.Root(((*OneofElement)(nil)).ProtoReflect().Descriptor())}
}
func (*EnumElement) ProtoPath() enumElementPathBuilder {
	return enumElementPathBuilder{protopath.Root(((*EnumElement)(nil)).ProtoReflect().Descriptor())}
}
func (*EnumValueNode) ProtoPath() enumValueNodePathBuilder {
	return enumValueNodePathBuilder{protopath.Root(((*EnumValueNode)(nil)).ProtoReflect().Descriptor())}
}
func (*RangeNode) ProtoPath() rangeNodePathBuilder {
	return rangeNodePathBuilder{protopath.Root(((*RangeNode)(nil)).ProtoReflect().Descriptor())}
}
func (*IntValueNode) ProtoPath() intValueNodePathBuilder {
	return intValueNodePathBuilder{protopath.Root(((*IntValueNode)(nil)).ProtoReflect().Descriptor())}
}
func (*ServiceNode) ProtoPath() serviceNodePathBuilder {
	return serviceNodePathBuilder{protopath.Root(((*ServiceNode)(nil)).ProtoReflect().Descriptor())}
}
func (*ServiceElement) ProtoPath() serviceElementPathBuilder {
	return serviceElementPathBuilder{protopath.Root(((*ServiceElement)(nil)).ProtoReflect().Descriptor())}
}
func (*RPCNode) ProtoPath() rPCNodePathBuilder {
	return rPCNodePathBuilder{protopath.Root(((*RPCNode)(nil)).ProtoReflect().Descriptor())}
}
func (*RPCTypeNode) ProtoPath() rPCTypeNodePathBuilder {
	return rPCTypeNodePathBuilder{protopath.Root(((*RPCTypeNode)(nil)).ProtoReflect().Descriptor())}
}
func (*RPCElement) ProtoPath() rPCElementPathBuilder {
	return rPCElementPathBuilder{protopath.Root(((*RPCElement)(nil)).ProtoReflect().Descriptor())}
}
func (*SyntheticMapField) ProtoPath() syntheticMapFieldPathBuilder {
	return syntheticMapFieldPathBuilder{protopath.Root(((*SyntheticMapField)(nil)).ProtoReflect().Descriptor())}
}
func (*FieldDeclNode) ProtoPath() fieldDeclNodePathBuilder {
	return fieldDeclNodePathBuilder{protopath.Root(((*FieldDeclNode)(nil)).ProtoReflect().Descriptor())}
}
func (*NoSourceNode) ProtoPath() noSourceNodePathBuilder {
	return noSourceNodePathBuilder{protopath.Root(((*NoSourceNode)(nil)).ProtoReflect().Descriptor())}
}

func (p fileInfoPathBuilder) Comments(idx int) fileInfo_CommentInfoPathBuilder {
	return fileInfo_CommentInfoPathBuilder(append(p, protopath.FieldAccess(((*FileInfo)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4)), protopath.ListIndex(idx)))
}
func (p fileInfoPathBuilder) ItemList(idx int) fileInfo_ItemSpanPathBuilder {
	return fileInfo_ItemSpanPathBuilder(append(p, protopath.FieldAccess(((*FileInfo)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(5)), protopath.ListIndex(idx)))
}
func (p fileElementPathBuilder) Import() importNodePathBuilder {
	return importNodePathBuilder(append(p, protopath.FieldAccess(((*FileElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p fileElementPathBuilder) Package() packageNodePathBuilder {
	return packageNodePathBuilder(append(p, protopath.FieldAccess(((*FileElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p fileElementPathBuilder) Option() optionNodePathBuilder {
	return optionNodePathBuilder(append(p, protopath.FieldAccess(((*FileElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p fileElementPathBuilder) Message() messageNodePathBuilder {
	return messageNodePathBuilder(append(p, protopath.FieldAccess(((*FileElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}
func (p fileElementPathBuilder) Enum() enumNodePathBuilder {
	return enumNodePathBuilder(append(p, protopath.FieldAccess(((*FileElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(5))))
}
func (p fileElementPathBuilder) Extend() extendNodePathBuilder {
	return extendNodePathBuilder(append(p, protopath.FieldAccess(((*FileElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(6))))
}
func (p fileElementPathBuilder) Service() serviceNodePathBuilder {
	return serviceNodePathBuilder(append(p, protopath.FieldAccess(((*FileElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(7))))
}
func (p fileElementPathBuilder) Err() errorNodePathBuilder {
	return errorNodePathBuilder(append(p, protopath.FieldAccess(((*FileElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(8))))
}
func (p importNodePathBuilder) Keyword() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*ImportNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p importNodePathBuilder) Public() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*ImportNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p importNodePathBuilder) Weak() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*ImportNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p importNodePathBuilder) Name() stringValueNodePathBuilder {
	return stringValueNodePathBuilder(append(p, protopath.FieldAccess(((*ImportNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}
func (p importNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*ImportNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(5))))
}
func (p stringValueNodePathBuilder) StringLiteral() stringLiteralNodePathBuilder {
	return stringLiteralNodePathBuilder(append(p, protopath.FieldAccess(((*StringValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p stringValueNodePathBuilder) CompoundStringLiteral() compoundStringLiteralNodePathBuilder {
	return compoundStringLiteralNodePathBuilder(append(p, protopath.FieldAccess(((*StringValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p compoundStringLiteralNodePathBuilder) Elements(idx int) stringValueNodePathBuilder {
	return stringValueNodePathBuilder(append(p, protopath.FieldAccess(((*CompoundStringLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1)), protopath.ListIndex(idx)))
}
func (p packageNodePathBuilder) Keyword() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*PackageNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p packageNodePathBuilder) Name() identValueNodePathBuilder {
	return identValueNodePathBuilder(append(p, protopath.FieldAccess(((*PackageNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p packageNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*PackageNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p identValueNodePathBuilder) Ident() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*IdentValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p identValueNodePathBuilder) CompoundIdent() compoundIdentNodePathBuilder {
	return compoundIdentNodePathBuilder(append(p, protopath.FieldAccess(((*IdentValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p compoundIdentNodePathBuilder) Components(idx int) complexIdentComponentPathBuilder {
	return complexIdentComponentPathBuilder(append(p, protopath.FieldAccess(((*CompoundIdentNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1)), protopath.ListIndex(idx)))
}
func (p complexIdentComponentPathBuilder) Ident() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*ComplexIdentComponent)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p complexIdentComponentPathBuilder) Dot() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*ComplexIdentComponent)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p complexIdentComponentPathBuilder) FieldRef() fieldReferenceNodePathBuilder {
	return fieldReferenceNodePathBuilder(append(p, protopath.FieldAccess(((*ComplexIdentComponent)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p fieldReferenceNodePathBuilder) Open() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*FieldReferenceNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p fieldReferenceNodePathBuilder) UrlPrefix() identValueNodePathBuilder {
	return identValueNodePathBuilder(append(p, protopath.FieldAccess(((*FieldReferenceNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p fieldReferenceNodePathBuilder) Slash() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*FieldReferenceNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p fieldReferenceNodePathBuilder) Name() identValueNodePathBuilder {
	return identValueNodePathBuilder(append(p, protopath.FieldAccess(((*FieldReferenceNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}
func (p fieldReferenceNodePathBuilder) Comma() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*FieldReferenceNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(5))))
}
func (p fieldReferenceNodePathBuilder) Close() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*FieldReferenceNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(6))))
}
func (p fieldReferenceNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*FieldReferenceNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(7))))
}
func (p optionNodePathBuilder) Keyword() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*OptionNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p optionNodePathBuilder) Name() optionNameNodePathBuilder {
	return optionNameNodePathBuilder(append(p, protopath.FieldAccess(((*OptionNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p optionNodePathBuilder) Equals() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*OptionNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p optionNodePathBuilder) Val() valueNodePathBuilder {
	return valueNodePathBuilder(append(p, protopath.FieldAccess(((*OptionNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}
func (p optionNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*OptionNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(5))))
}
func (p optionNameNodePathBuilder) Parts(idx int) complexIdentComponentPathBuilder {
	return complexIdentComponentPathBuilder(append(p, protopath.FieldAccess(((*OptionNameNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1)), protopath.ListIndex(idx)))
}
func (p valueNodePathBuilder) Ident() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*ValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p valueNodePathBuilder) CompoundIdent() compoundIdentNodePathBuilder {
	return compoundIdentNodePathBuilder(append(p, protopath.FieldAccess(((*ValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p valueNodePathBuilder) StringLiteral() stringLiteralNodePathBuilder {
	return stringLiteralNodePathBuilder(append(p, protopath.FieldAccess(((*ValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p valueNodePathBuilder) CompoundStringLiteral() compoundStringLiteralNodePathBuilder {
	return compoundStringLiteralNodePathBuilder(append(p, protopath.FieldAccess(((*ValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}
func (p valueNodePathBuilder) UintLiteral() uintLiteralNodePathBuilder {
	return uintLiteralNodePathBuilder(append(p, protopath.FieldAccess(((*ValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(5))))
}
func (p valueNodePathBuilder) NegativeIntLiteral() negativeIntLiteralNodePathBuilder {
	return negativeIntLiteralNodePathBuilder(append(p, protopath.FieldAccess(((*ValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(6))))
}
func (p valueNodePathBuilder) FloatLiteral() floatLiteralNodePathBuilder {
	return floatLiteralNodePathBuilder(append(p, protopath.FieldAccess(((*ValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(7))))
}
func (p valueNodePathBuilder) SpecialFloatLiteral() specialFloatLiteralNodePathBuilder {
	return specialFloatLiteralNodePathBuilder(append(p, protopath.FieldAccess(((*ValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(8))))
}
func (p valueNodePathBuilder) SignedFloatLiteral() signedFloatLiteralNodePathBuilder {
	return signedFloatLiteralNodePathBuilder(append(p, protopath.FieldAccess(((*ValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(9))))
}
func (p valueNodePathBuilder) ArrayLiteral() arrayLiteralNodePathBuilder {
	return arrayLiteralNodePathBuilder(append(p, protopath.FieldAccess(((*ValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(10))))
}
func (p valueNodePathBuilder) MessageLiteral() messageLiteralNodePathBuilder {
	return messageLiteralNodePathBuilder(append(p, protopath.FieldAccess(((*ValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(11))))
}
func (p negativeIntLiteralNodePathBuilder) Minus() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*NegativeIntLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p negativeIntLiteralNodePathBuilder) Uint() uintLiteralNodePathBuilder {
	return uintLiteralNodePathBuilder(append(p, protopath.FieldAccess(((*NegativeIntLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p specialFloatLiteralNodePathBuilder) Keyword() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*SpecialFloatLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p signedFloatLiteralNodePathBuilder) Sign() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*SignedFloatLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p signedFloatLiteralNodePathBuilder) Float() floatValueNodePathBuilder {
	return floatValueNodePathBuilder(append(p, protopath.FieldAccess(((*SignedFloatLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p floatValueNodePathBuilder) FloatLiteral() floatLiteralNodePathBuilder {
	return floatLiteralNodePathBuilder(append(p, protopath.FieldAccess(((*FloatValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p floatValueNodePathBuilder) SpecialFloatLiteral() specialFloatLiteralNodePathBuilder {
	return specialFloatLiteralNodePathBuilder(append(p, protopath.FieldAccess(((*FloatValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p floatValueNodePathBuilder) UintLiteral() uintLiteralNodePathBuilder {
	return uintLiteralNodePathBuilder(append(p, protopath.FieldAccess(((*FloatValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p arrayLiteralNodePathBuilder) OpenBracket() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*ArrayLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p arrayLiteralNodePathBuilder) Elements(idx int) arrayLiteralElementPathBuilder {
	return arrayLiteralElementPathBuilder(append(p, protopath.FieldAccess(((*ArrayLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2)), protopath.ListIndex(idx)))
}
func (p arrayLiteralNodePathBuilder) CloseBracket() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*ArrayLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p arrayLiteralNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*ArrayLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}
func (p arrayLiteralElementPathBuilder) Value() valueNodePathBuilder {
	return valueNodePathBuilder(append(p, protopath.FieldAccess(((*ArrayLiteralElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p arrayLiteralElementPathBuilder) Comma() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*ArrayLiteralElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p messageLiteralNodePathBuilder) Open() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*MessageLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p messageLiteralNodePathBuilder) Elements(idx int) messageFieldNodePathBuilder {
	return messageFieldNodePathBuilder(append(p, protopath.FieldAccess(((*MessageLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2)), protopath.ListIndex(idx)))
}
func (p messageLiteralNodePathBuilder) Close() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*MessageLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}
func (p messageLiteralNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*MessageLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(5))))
}
func (p messageFieldNodePathBuilder) Name() fieldReferenceNodePathBuilder {
	return fieldReferenceNodePathBuilder(append(p, protopath.FieldAccess(((*MessageFieldNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p messageFieldNodePathBuilder) Sep() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*MessageFieldNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p messageFieldNodePathBuilder) Val() valueNodePathBuilder {
	return valueNodePathBuilder(append(p, protopath.FieldAccess(((*MessageFieldNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p messageFieldNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*MessageFieldNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}
func (p messageNodePathBuilder) Keyword() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*MessageNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p messageNodePathBuilder) Name() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*MessageNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p messageNodePathBuilder) OpenBrace() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*MessageNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p messageNodePathBuilder) Decls(idx int) messageElementPathBuilder {
	return messageElementPathBuilder(append(p, protopath.FieldAccess(((*MessageNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4)), protopath.ListIndex(idx)))
}
func (p messageNodePathBuilder) CloseBrace() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*MessageNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(5))))
}
func (p messageNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*MessageNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(6))))
}
func (p messageElementPathBuilder) Option() optionNodePathBuilder {
	return optionNodePathBuilder(append(p, protopath.FieldAccess(((*MessageElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p messageElementPathBuilder) Field() fieldNodePathBuilder {
	return fieldNodePathBuilder(append(p, protopath.FieldAccess(((*MessageElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p messageElementPathBuilder) MapField() mapFieldNodePathBuilder {
	return mapFieldNodePathBuilder(append(p, protopath.FieldAccess(((*MessageElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p messageElementPathBuilder) Oneof() oneofNodePathBuilder {
	return oneofNodePathBuilder(append(p, protopath.FieldAccess(((*MessageElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}
func (p messageElementPathBuilder) Group() groupNodePathBuilder {
	return groupNodePathBuilder(append(p, protopath.FieldAccess(((*MessageElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(5))))
}
func (p messageElementPathBuilder) Message() messageNodePathBuilder {
	return messageNodePathBuilder(append(p, protopath.FieldAccess(((*MessageElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(6))))
}
func (p messageElementPathBuilder) Enum() enumNodePathBuilder {
	return enumNodePathBuilder(append(p, protopath.FieldAccess(((*MessageElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(7))))
}
func (p messageElementPathBuilder) Extend() extendNodePathBuilder {
	return extendNodePathBuilder(append(p, protopath.FieldAccess(((*MessageElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(8))))
}
func (p messageElementPathBuilder) ExtensionRange() extensionRangeNodePathBuilder {
	return extensionRangeNodePathBuilder(append(p, protopath.FieldAccess(((*MessageElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(9))))
}
func (p messageElementPathBuilder) Reserved() reservedNodePathBuilder {
	return reservedNodePathBuilder(append(p, protopath.FieldAccess(((*MessageElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(10))))
}
func (p messageElementPathBuilder) Empty() emptyDeclNodePathBuilder {
	return emptyDeclNodePathBuilder(append(p, protopath.FieldAccess(((*MessageElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(11))))
}
func (p fieldNodePathBuilder) Label() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*FieldNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p fieldNodePathBuilder) FieldType() identValueNodePathBuilder {
	return identValueNodePathBuilder(append(p, protopath.FieldAccess(((*FieldNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p fieldNodePathBuilder) Name() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*FieldNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p fieldNodePathBuilder) Equals() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*FieldNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}
func (p fieldNodePathBuilder) Tag() uintLiteralNodePathBuilder {
	return uintLiteralNodePathBuilder(append(p, protopath.FieldAccess(((*FieldNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(5))))
}
func (p fieldNodePathBuilder) Options() compactOptionsNodePathBuilder {
	return compactOptionsNodePathBuilder(append(p, protopath.FieldAccess(((*FieldNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(6))))
}
func (p fieldNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*FieldNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(7))))
}
func (p compactOptionsNodePathBuilder) OpenBracket() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*CompactOptionsNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p compactOptionsNodePathBuilder) Options(idx int) optionNodePathBuilder {
	return optionNodePathBuilder(append(p, protopath.FieldAccess(((*CompactOptionsNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2)), protopath.ListIndex(idx)))
}
func (p compactOptionsNodePathBuilder) CloseBracket() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*CompactOptionsNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p compactOptionsNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*CompactOptionsNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}
func (p mapFieldNodePathBuilder) MapType() mapTypeNodePathBuilder {
	return mapTypeNodePathBuilder(append(p, protopath.FieldAccess(((*MapFieldNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p mapFieldNodePathBuilder) Name() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*MapFieldNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p mapFieldNodePathBuilder) Equals() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*MapFieldNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p mapFieldNodePathBuilder) Tag() uintLiteralNodePathBuilder {
	return uintLiteralNodePathBuilder(append(p, protopath.FieldAccess(((*MapFieldNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}
func (p mapFieldNodePathBuilder) Options() compactOptionsNodePathBuilder {
	return compactOptionsNodePathBuilder(append(p, protopath.FieldAccess(((*MapFieldNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(5))))
}
func (p mapFieldNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*MapFieldNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(6))))
}
func (p mapTypeNodePathBuilder) Keyword() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*MapTypeNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p mapTypeNodePathBuilder) OpenAngle() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*MapTypeNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p mapTypeNodePathBuilder) KeyType() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*MapTypeNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p mapTypeNodePathBuilder) Comma() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*MapTypeNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}
func (p mapTypeNodePathBuilder) ValueType() identValueNodePathBuilder {
	return identValueNodePathBuilder(append(p, protopath.FieldAccess(((*MapTypeNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(5))))
}
func (p mapTypeNodePathBuilder) CloseAngle() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*MapTypeNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(6))))
}
func (p mapTypeNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*MapTypeNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(7))))
}
func (p oneofNodePathBuilder) Keyword() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*OneofNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p oneofNodePathBuilder) Name() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*OneofNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p oneofNodePathBuilder) OpenBrace() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*OneofNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p oneofNodePathBuilder) Decls(idx int) oneofElementPathBuilder {
	return oneofElementPathBuilder(append(p, protopath.FieldAccess(((*OneofNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4)), protopath.ListIndex(idx)))
}
func (p oneofNodePathBuilder) CloseBrace() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*OneofNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(5))))
}
func (p oneofNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*OneofNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(6))))
}
func (p oneofElementPathBuilder) Option() optionNodePathBuilder {
	return optionNodePathBuilder(append(p, protopath.FieldAccess(((*OneofElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p oneofElementPathBuilder) Field() fieldNodePathBuilder {
	return fieldNodePathBuilder(append(p, protopath.FieldAccess(((*OneofElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p oneofElementPathBuilder) Group() groupNodePathBuilder {
	return groupNodePathBuilder(append(p, protopath.FieldAccess(((*OneofElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p groupNodePathBuilder) Label() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*GroupNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p groupNodePathBuilder) Keyword() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*GroupNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p groupNodePathBuilder) Name() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*GroupNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p groupNodePathBuilder) Equals() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*GroupNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}
func (p groupNodePathBuilder) Tag() uintLiteralNodePathBuilder {
	return uintLiteralNodePathBuilder(append(p, protopath.FieldAccess(((*GroupNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(5))))
}
func (p groupNodePathBuilder) Options() compactOptionsNodePathBuilder {
	return compactOptionsNodePathBuilder(append(p, protopath.FieldAccess(((*GroupNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(6))))
}
func (p groupNodePathBuilder) OpenBrace() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*GroupNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(7))))
}
func (p groupNodePathBuilder) Decls(idx int) messageElementPathBuilder {
	return messageElementPathBuilder(append(p, protopath.FieldAccess(((*GroupNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(8)), protopath.ListIndex(idx)))
}
func (p groupNodePathBuilder) CloseBrace() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*GroupNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(9))))
}
func (p groupNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*GroupNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(10))))
}
func (p enumNodePathBuilder) Keyword() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*EnumNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p enumNodePathBuilder) Name() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*EnumNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p enumNodePathBuilder) OpenBrace() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*EnumNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p enumNodePathBuilder) Decls(idx int) enumElementPathBuilder {
	return enumElementPathBuilder(append(p, protopath.FieldAccess(((*EnumNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4)), protopath.ListIndex(idx)))
}
func (p enumNodePathBuilder) CloseBrace() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*EnumNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(5))))
}
func (p enumNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*EnumNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(6))))
}
func (p enumElementPathBuilder) Option() optionNodePathBuilder {
	return optionNodePathBuilder(append(p, protopath.FieldAccess(((*EnumElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p enumElementPathBuilder) EnumValue() enumValueNodePathBuilder {
	return enumValueNodePathBuilder(append(p, protopath.FieldAccess(((*EnumElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p enumElementPathBuilder) Reserved() reservedNodePathBuilder {
	return reservedNodePathBuilder(append(p, protopath.FieldAccess(((*EnumElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p enumValueNodePathBuilder) Name() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*EnumValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p enumValueNodePathBuilder) Equals() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*EnumValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p enumValueNodePathBuilder) Number() intValueNodePathBuilder {
	return intValueNodePathBuilder(append(p, protopath.FieldAccess(((*EnumValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p enumValueNodePathBuilder) Options() compactOptionsNodePathBuilder {
	return compactOptionsNodePathBuilder(append(p, protopath.FieldAccess(((*EnumValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}
func (p enumValueNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*EnumValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(5))))
}
func (p intValueNodePathBuilder) UintLiteral() uintLiteralNodePathBuilder {
	return uintLiteralNodePathBuilder(append(p, protopath.FieldAccess(((*IntValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p intValueNodePathBuilder) NegativeIntLiteral() negativeIntLiteralNodePathBuilder {
	return negativeIntLiteralNodePathBuilder(append(p, protopath.FieldAccess(((*IntValueNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p reservedNodePathBuilder) Keyword() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*ReservedNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p reservedNodePathBuilder) Elements(idx int) reservedElementPathBuilder {
	return reservedElementPathBuilder(append(p, protopath.FieldAccess(((*ReservedNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2)), protopath.ListIndex(idx)))
}
func (p reservedNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*ReservedNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(6))))
}
func (p reservedElementPathBuilder) Range() rangeNodePathBuilder {
	return rangeNodePathBuilder(append(p, protopath.FieldAccess(((*ReservedElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p reservedElementPathBuilder) Name() stringValueNodePathBuilder {
	return stringValueNodePathBuilder(append(p, protopath.FieldAccess(((*ReservedElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p reservedElementPathBuilder) Identifier() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*ReservedElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p reservedElementPathBuilder) Comma() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*ReservedElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}
func (p rangeNodePathBuilder) StartVal() intValueNodePathBuilder {
	return intValueNodePathBuilder(append(p, protopath.FieldAccess(((*RangeNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p rangeNodePathBuilder) To() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*RangeNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p rangeNodePathBuilder) EndVal() intValueNodePathBuilder {
	return intValueNodePathBuilder(append(p, protopath.FieldAccess(((*RangeNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p rangeNodePathBuilder) Max() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*RangeNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}
func (p extendNodePathBuilder) Keyword() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*ExtendNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p extendNodePathBuilder) Extendee() identValueNodePathBuilder {
	return identValueNodePathBuilder(append(p, protopath.FieldAccess(((*ExtendNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p extendNodePathBuilder) OpenBrace() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*ExtendNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p extendNodePathBuilder) Decls(idx int) extendElementPathBuilder {
	return extendElementPathBuilder(append(p, protopath.FieldAccess(((*ExtendNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4)), protopath.ListIndex(idx)))
}
func (p extendNodePathBuilder) CloseBrace() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*ExtendNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(5))))
}
func (p extendNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*ExtendNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(6))))
}
func (p extendElementPathBuilder) Field() fieldNodePathBuilder {
	return fieldNodePathBuilder(append(p, protopath.FieldAccess(((*ExtendElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p extendElementPathBuilder) Group() groupNodePathBuilder {
	return groupNodePathBuilder(append(p, protopath.FieldAccess(((*ExtendElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p extendElementPathBuilder) Empty() emptyDeclNodePathBuilder {
	return emptyDeclNodePathBuilder(append(p, protopath.FieldAccess(((*ExtendElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p emptyDeclNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*EmptyDeclNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p extensionRangeNodePathBuilder) Keyword() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*ExtensionRangeNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p extensionRangeNodePathBuilder) Elements(idx int) rangeElementPathBuilder {
	return rangeElementPathBuilder(append(p, protopath.FieldAccess(((*ExtensionRangeNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2)), protopath.ListIndex(idx)))
}
func (p extensionRangeNodePathBuilder) Options() compactOptionsNodePathBuilder {
	return compactOptionsNodePathBuilder(append(p, protopath.FieldAccess(((*ExtensionRangeNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}
func (p extensionRangeNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*ExtensionRangeNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(5))))
}
func (p rangeElementPathBuilder) Range() rangeNodePathBuilder {
	return rangeNodePathBuilder(append(p, protopath.FieldAccess(((*RangeElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p rangeElementPathBuilder) Comma() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*RangeElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p serviceNodePathBuilder) Keyword() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*ServiceNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p serviceNodePathBuilder) Name() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*ServiceNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p serviceNodePathBuilder) OpenBrace() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*ServiceNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p serviceNodePathBuilder) Decls(idx int) serviceElementPathBuilder {
	return serviceElementPathBuilder(append(p, protopath.FieldAccess(((*ServiceNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4)), protopath.ListIndex(idx)))
}
func (p serviceNodePathBuilder) CloseBrace() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*ServiceNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(5))))
}
func (p serviceNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*ServiceNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(6))))
}
func (p serviceElementPathBuilder) Option() optionNodePathBuilder {
	return optionNodePathBuilder(append(p, protopath.FieldAccess(((*ServiceElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p serviceElementPathBuilder) Rpc() rPCNodePathBuilder {
	return rPCNodePathBuilder(append(p, protopath.FieldAccess(((*ServiceElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p rPCNodePathBuilder) Keyword() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*RPCNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p rPCNodePathBuilder) Name() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*RPCNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p rPCNodePathBuilder) Input() rPCTypeNodePathBuilder {
	return rPCTypeNodePathBuilder(append(p, protopath.FieldAccess(((*RPCNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p rPCNodePathBuilder) Returns() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*RPCNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}
func (p rPCNodePathBuilder) Output() rPCTypeNodePathBuilder {
	return rPCTypeNodePathBuilder(append(p, protopath.FieldAccess(((*RPCNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(5))))
}
func (p rPCNodePathBuilder) OpenBrace() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*RPCNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(6))))
}
func (p rPCNodePathBuilder) Decls(idx int) rPCElementPathBuilder {
	return rPCElementPathBuilder(append(p, protopath.FieldAccess(((*RPCNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(7)), protopath.ListIndex(idx)))
}
func (p rPCNodePathBuilder) CloseBrace() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*RPCNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(8))))
}
func (p rPCNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*RPCNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(9))))
}
func (p rPCTypeNodePathBuilder) OpenParen() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*RPCTypeNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p rPCTypeNodePathBuilder) Stream() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*RPCTypeNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p rPCTypeNodePathBuilder) MessageType() identValueNodePathBuilder {
	return identValueNodePathBuilder(append(p, protopath.FieldAccess(((*RPCTypeNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p rPCTypeNodePathBuilder) CloseParen() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*RPCTypeNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}
func (p rPCTypeNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*RPCTypeNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(5))))
}
func (p rPCElementPathBuilder) Option() optionNodePathBuilder {
	return optionNodePathBuilder(append(p, protopath.FieldAccess(((*RPCElement)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p errorNodePathBuilder) Err() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*ErrorNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p syntaxNodePathBuilder) Keyword() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*SyntaxNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p syntaxNodePathBuilder) Equals() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*SyntaxNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p syntaxNodePathBuilder) Syntax() stringValueNodePathBuilder {
	return stringValueNodePathBuilder(append(p, protopath.FieldAccess(((*SyntaxNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p syntaxNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*SyntaxNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}
func (p editionNodePathBuilder) Keyword() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*EditionNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p editionNodePathBuilder) Equals() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*EditionNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p editionNodePathBuilder) Edition() stringValueNodePathBuilder {
	return stringValueNodePathBuilder(append(p, protopath.FieldAccess(((*EditionNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p editionNodePathBuilder) Semicolon() runeNodePathBuilder {
	return runeNodePathBuilder(append(p, protopath.FieldAccess(((*EditionNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}
func (p messageDeclNodePathBuilder) Message() messageNodePathBuilder {
	return messageNodePathBuilder(append(p, protopath.FieldAccess(((*MessageDeclNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p messageDeclNodePathBuilder) Group() groupNodePathBuilder {
	return groupNodePathBuilder(append(p, protopath.FieldAccess(((*MessageDeclNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p messageDeclNodePathBuilder) MapField() mapFieldNodePathBuilder {
	return mapFieldNodePathBuilder(append(p, protopath.FieldAccess(((*MessageDeclNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p syntheticMapFieldPathBuilder) Name() identNodePathBuilder {
	return identNodePathBuilder(append(p, protopath.FieldAccess(((*SyntheticMapField)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p syntheticMapFieldPathBuilder) FieldType() identValueNodePathBuilder {
	return identValueNodePathBuilder(append(p, protopath.FieldAccess(((*SyntheticMapField)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p syntheticMapFieldPathBuilder) Tag() uintLiteralNodePathBuilder {
	return uintLiteralNodePathBuilder(append(p, protopath.FieldAccess(((*SyntheticMapField)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p fieldDeclNodePathBuilder) Field() fieldNodePathBuilder {
	return fieldNodePathBuilder(append(p, protopath.FieldAccess(((*FieldDeclNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p fieldDeclNodePathBuilder) MapField() mapFieldNodePathBuilder {
	return mapFieldNodePathBuilder(append(p, protopath.FieldAccess(((*FieldDeclNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p fieldDeclNodePathBuilder) SyntheticMapField() syntheticMapFieldPathBuilder {
	return syntheticMapFieldPathBuilder(append(p, protopath.FieldAccess(((*FieldDeclNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p fieldDeclNodePathBuilder) Group() groupNodePathBuilder {
	return groupNodePathBuilder(append(p, protopath.FieldAccess(((*FieldDeclNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(4))))
}

func (p fileInfoPathBuilder) Name() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*FileInfo)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p fileInfoPathBuilder) Data() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*FileInfo)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p fileInfoPathBuilder) Lines(idx int) protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*FileInfo)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3)), protopath.ListIndex(idx)))
}
func (p fileInfoPathBuilder) Version() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*FileInfo)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(6))))
}
func (p fileInfoPathBuilder) PositionEncoding() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*FileInfo)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(7))))
}
func (p fileInfoPathBuilder) ZeroLengthTokenCount() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*FileInfo)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(8))))
}
func (p fileInfoPathBuilder) ZeroLengthTokenConsecutiveCount() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*FileInfo)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(9))))
}
func (p fileInfo_CommentInfoPathBuilder) Index() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*FileInfo_CommentInfo)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p fileInfo_CommentInfoPathBuilder) AttributedToIndex() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*FileInfo_CommentInfo)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p fileInfo_CommentInfoPathBuilder) VirtualIndex() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*FileInfo_CommentInfo)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p fileInfo_ItemSpanPathBuilder) Offset() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*FileInfo_ItemSpan)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p fileInfo_ItemSpanPathBuilder) Length() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*FileInfo_ItemSpan)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p identNodePathBuilder) Token() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*IdentNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p identNodePathBuilder) Val() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*IdentNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p identNodePathBuilder) IsKeyword() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*IdentNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p stringLiteralNodePathBuilder) Token() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*StringLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p stringLiteralNodePathBuilder) Val() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*StringLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p runeNodePathBuilder) Token() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*RuneNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p runeNodePathBuilder) Rune() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*RuneNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p runeNodePathBuilder) Virtual() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*RuneNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p uintLiteralNodePathBuilder) Token() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*UintLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p uintLiteralNodePathBuilder) Val() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*UintLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p uintLiteralNodePathBuilder) Raw() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*UintLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p floatLiteralNodePathBuilder) Token() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*FloatLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
func (p floatLiteralNodePathBuilder) Val() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*FloatLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p floatLiteralNodePathBuilder) Raw() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*FloatLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(3))))
}
func (p specialFloatLiteralNodePathBuilder) Val() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*SpecialFloatLiteralNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(2))))
}
func (p noSourceNodePathBuilder) Filename() protopath.Path {
	return protopath.Path(append(p, protopath.FieldAccess(((*NoSourceNode)(nil)).ProtoReflect().Descriptor().Fields().ByNumber(1))))
}
