desc_test_comments.proto:
   Span: 10:1 -> 172:2

desc_test_comments.proto > syntax:
   Span: 10:1 -> 10:19
   Detached Comments:
protols:nofmt
protols:nogen
 This is the first detached comment for the syntax.


 This is a second detached comment.

 This is a third.
   Leading Comments:
 Syntax comment...
   Trailing Comments:
 Syntax trailer.

desc_test_comments.proto > package:
   Span: 14:1 -> 14:17
   Leading Comments:
 And now the package declaration

desc_test_comments.proto > options:
   Span: 17:1 -> 17:78

desc_test_comments.proto > options > go_package:
   Span: 17:1 -> 17:78
   Leading Comments:
 option comments FTW!!!

desc_test_comments.proto > dependency[0]:
   Span: 19:1 -> 19:45

desc_test_comments.proto > public_dependency[0]:
   Span: 19:8 -> 19:14

desc_test_comments.proto > dependency[1]:
   Span: 20:1 -> 20:34

desc_test_comments.proto > message_type[0]:
   Span: 27:1 -> 118:2
   Detached Comments:
 Multiple white space lines (like above) cannot
 be preserved...
   Leading Comments:
 We need a request for our RPC service below.

desc_test_comments.proto > message_type[0] > name:
   Span: 27:68 -> 27:75
   Leading Comments:
 request with a capital R 
   Trailing Comments:
 trailer

desc_test_comments.proto > message_type[0] > options:
   Span: 28:9 -> 28:34

desc_test_comments.proto > message_type[0] > options > deprecated:
   Span: 28:9 -> 28:34
   Trailing Comments:
 deprecated!

desc_test_comments.proto > message_type[0] > field[0]:
   Span: 31:9 -> 34:132
   Leading Comments:
 A field comment
   Trailing Comments:
 field trailer #1...

desc_test_comments.proto > message_type[0] > field[0] > label:
   Span: 31:9 -> 31:17

desc_test_comments.proto > message_type[0] > field[0] > type:
   Span: 31:18 -> 31:23

desc_test_comments.proto > message_type[0] > field[0] > name:
   Span: 31:24 -> 31:27

desc_test_comments.proto > message_type[0] > field[0] > number:
   Span: 31:70 -> 31:71
   Leading Comments:
 tag numero uno 
   Trailing Comments:
 tag trailer
that spans multiple lines...
more than two. 

desc_test_comments.proto > message_type[0] > field[0] > options:
   Span: 34:11 -> 34:131

desc_test_comments.proto > message_type[0] > field[0] > options > packed:
   Span: 34:12 -> 34:23
   Trailing Comments:
 packed! 

desc_test_comments.proto > message_type[0] > field[0] > json_name:
   Span: 34:39 -> 34:56
   Trailing Comments:
 custom JSON! 

desc_test_comments.proto > message_type[0] > field[0] > options > (testprotos.ffubar)[0]:
   Span: 34:77 -> 34:102

desc_test_comments.proto > message_type[0] > field[0] > options > (testprotos.ffubarb):
   Span: 34:104 -> 34:130

desc_test_comments.proto > message_type[0] > options:
   Span: 37:27 -> 37:61

desc_test_comments.proto > message_type[0] > options > (testprotos.mfubar):
   Span: 37:27 -> 37:61
   Leading Comments:
 lead mfubar 
   Trailing Comments:
 trailing mfubar

desc_test_comments.proto > message_type[0] > field[1]:
   Span: 44:29 -> 45:77
   Detached Comments:
 some detached comments

 some detached comments with unicode 这个是值

 Another field comment
   Leading Comments:
 label comment 

desc_test_comments.proto > message_type[0] > field[1] > label:
   Span: 44:29 -> 44:37

desc_test_comments.proto > message_type[0] > field[1] > type:
   Span: 44:57 -> 44:63
   Detached Comments:
 type comment 

desc_test_comments.proto > message_type[0] > field[1] > name:
   Span: 44:83 -> 44:87
   Detached Comments:
 name comment 

desc_test_comments.proto > message_type[0] > field[1] > number:
   Span: 44:90 -> 44:91

desc_test_comments.proto > message_type[0] > field[1] > options:
   Span: 45:17 -> 45:76

desc_test_comments.proto > message_type[0] > field[1] > default_value:
   Span: 45:37 -> 45:54
   Detached Comments:
 default lead 
   Trailing Comments:
 default trail 

desc_test_comments.proto > message_type[0] > extension_range:
   Span: 48:9 -> 48:31
   Leading Comments:
 extension range comments are (sadly) not preserved

desc_test_comments.proto > message_type[0] > extension_range[0]:
   Span: 48:20 -> 48:30

desc_test_comments.proto > message_type[0] > extension_range[0] > start:
   Span: 48:20 -> 48:23

desc_test_comments.proto > message_type[0] > extension_range[0] > end:
   Span: 48:27 -> 48:30

desc_test_comments.proto > message_type[0] > extension_range:
   Span: 49:9 -> 49:109

desc_test_comments.proto > message_type[0] > extension_range[1]:
   Span: 49:20 -> 49:30

desc_test_comments.proto > message_type[0] > extension_range[1] > start:
   Span: 49:20 -> 49:23

desc_test_comments.proto > message_type[0] > extension_range[1] > end:
   Span: 49:27 -> 49:30

desc_test_comments.proto > message_type[0] > extension_range[1] > options:
   Span: 49:31 -> 49:108

desc_test_comments.proto > message_type[0] > extension_range[1] > options > (testprotos.exfubarb):
   Span: 49:32 -> 49:74

desc_test_comments.proto > message_type[0] > extension_range[1] > options > (testprotos.exfubar)[0]:
   Span: 49:76 -> 49:107

desc_test_comments.proto > message_type[0] > reserved_range:
   Span: 53:48 -> 53:77
   Detached Comments:
 another detached comment
   Leading Comments:
 same for reserved range comments 

desc_test_comments.proto > message_type[0] > reserved_range[0]:
   Span: 53:57 -> 53:65

desc_test_comments.proto > message_type[0] > reserved_range[0] > start:
   Span: 53:57 -> 53:59

desc_test_comments.proto > message_type[0] > reserved_range[0] > end:
   Span: 53:63 -> 53:65

desc_test_comments.proto > message_type[0] > reserved_range[1]:
   Span: 53:67 -> 53:75

desc_test_comments.proto > message_type[0] > reserved_range[1] > start:
   Span: 53:67 -> 53:69

desc_test_comments.proto > message_type[0] > reserved_range[1] > end:
   Span: 53:73 -> 53:75

desc_test_comments.proto > message_type[0] > reserved_name:
   Span: 54:9 -> 54:38
   Trailing Comments:
 reserved trailers 

desc_test_comments.proto > message_type[0] > reserved_name[0]:
   Span: 54:18 -> 54:23

desc_test_comments.proto > message_type[0] > reserved_name[1]:
   Span: 54:25 -> 54:30

desc_test_comments.proto > message_type[0] > reserved_name[2]:
   Span: 54:32 -> 54:37

desc_test_comments.proto > message_type[0] > field[2]:
   Span: 57:9 -> 75:10

desc_test_comments.proto > message_type[0] > field[2] > label:
   Span: 57:9 -> 57:17

desc_test_comments.proto > message_type[0] > field[2] > type:
   Span: 57:18 -> 57:23

desc_test_comments.proto > message_type[0] > field[2] > name:
   Span: 57:41 -> 57:47

desc_test_comments.proto > message_type[0] > field[2] > number:
   Span: 57:50 -> 57:51

desc_test_comments.proto > message_type[0] > nested_type[0]:
   Span: 57:9 -> 75:10
   Leading Comments:
 Group comment with emoji 😀 😍 👻 ❤ 💯 💥 🐶 🦂 🥑 🍻 🌍 🚕 🪐
   Trailing Comments:
 trailer for Extras

desc_test_comments.proto > message_type[0] > nested_type[0] > name:
   Span: 57:41 -> 57:47
   Detached Comments:
 group name 

desc_test_comments.proto > message_type[0] > field[2] > type_name:
   Span: 57:41 -> 57:47

desc_test_comments.proto > message_type[0] > nested_type[0] > options:
   Span: 61:17 -> 61:52

desc_test_comments.proto > message_type[0] > nested_type[0] > options > (testprotos.mfubar):
   Span: 61:17 -> 61:52
   Leading Comments:
 this is a custom option

desc_test_comments.proto > message_type[0] > nested_type[0] > field[0]:
   Span: 63:17 -> 63:41
   Trailing Comments:
 trailing comment for dbl 

desc_test_comments.proto > message_type[0] > nested_type[0] > field[0] > label:
   Span: 63:17 -> 63:25

desc_test_comments.proto > message_type[0] > nested_type[0] > field[0] > type:
   Span: 63:26 -> 63:32

desc_test_comments.proto > message_type[0] > nested_type[0] > field[0] > name:
   Span: 63:33 -> 63:36

desc_test_comments.proto > message_type[0] > nested_type[0] > field[0] > number:
   Span: 63:39 -> 63:40

desc_test_comments.proto > message_type[0] > nested_type[0] > field[1]:
   Span: 63:126 -> 63:149
   Detached Comments:
 detached comment 
   Leading Comments:
 leading comment for flt 

desc_test_comments.proto > message_type[0] > nested_type[0] > field[1] > label:
   Span: 63:126 -> 63:134

desc_test_comments.proto > message_type[0] > nested_type[0] > field[1] > type:
   Span: 63:135 -> 63:140

desc_test_comments.proto > message_type[0] > nested_type[0] > field[1] > name:
   Span: 63:141 -> 63:144

desc_test_comments.proto > message_type[0] > nested_type[0] > field[1] > number:
   Span: 63:147 -> 63:148

desc_test_comments.proto > message_type[0] > nested_type[0] > options:
   Span: 65:17 -> 65:64

desc_test_comments.proto > message_type[0] > nested_type[0] > options > no_standard_descriptor_accessor:
   Span: 65:17 -> 65:64

desc_test_comments.proto > message_type[0] > nested_type[0] > options:
   Span: 70:79 -> 70:102

desc_test_comments.proto > message_type[0] > nested_type[0] > options > deprecated:
   Span: 70:79 -> 70:102
   Detached Comments:
 weird trailing comment
for the option that gets
classified as detached
since it's on the same
line as the following
element 

desc_test_comments.proto > message_type[0] > nested_type[0] > field[2]:
   Span: 73:17 -> 73:41
   Leading Comments:
 Leading comment...
   Trailing Comments:
 Trailing comment...

desc_test_comments.proto > message_type[0] > nested_type[0] > field[2] > label:
   Span: 73:17 -> 73:25

desc_test_comments.proto > message_type[0] > nested_type[0] > field[2] > type:
   Span: 73:26 -> 73:32

desc_test_comments.proto > message_type[0] > nested_type[0] > field[2] > name:
   Span: 73:33 -> 73:36

desc_test_comments.proto > message_type[0] > nested_type[0] > field[2] > number:
   Span: 73:39 -> 73:40

desc_test_comments.proto > message_type[0] > enum_type[0]:
   Span: 77:9 -> 98:10
   Trailing Comments:
 trailer for enum

desc_test_comments.proto > message_type[0] > enum_type[0] > name:
   Span: 77:14 -> 77:29
   Trailing Comments:
 "super"!

desc_test_comments.proto > message_type[0] > enum_type[0] > options:
   Span: 81:17 -> 81:43

desc_test_comments.proto > message_type[0] > enum_type[0] > options > allow_alias:
   Span: 81:17 -> 81:43
   Leading Comments:
 allow_alias comments!

desc_test_comments.proto > message_type[0] > enum_type[0] > value[0]:
   Span: 83:17 -> 83:86

desc_test_comments.proto > message_type[0] > enum_type[0] > value[0] > name:
   Span: 83:17 -> 83:22

desc_test_comments.proto > message_type[0] > enum_type[0] > value[0] > number:
   Span: 83:25 -> 83:26

desc_test_comments.proto > message_type[0] > enum_type[0] > value[0] > options:
   Span: 83:27 -> 83:85

desc_test_comments.proto > message_type[0] > enum_type[0] > value[0] > options > (testprotos.evfubars):
   Span: 83:28 -> 83:56

desc_test_comments.proto > message_type[0] > enum_type[0] > value[0] > options > (testprotos.evfubar):
   Span: 83:58 -> 83:84

desc_test_comments.proto > message_type[0] > enum_type[0] > value[1]:
   Span: 84:17 -> 84:100

desc_test_comments.proto > message_type[0] > enum_type[0] > value[1] > name:
   Span: 84:17 -> 84:22

desc_test_comments.proto > message_type[0] > enum_type[0] > value[1] > number:
   Span: 84:25 -> 84:26

desc_test_comments.proto > message_type[0] > enum_type[0] > value[1] > options:
   Span: 84:27 -> 84:99

desc_test_comments.proto > message_type[0] > enum_type[0] > value[1] > options > (testprotos.evfubaruf):
   Span: 84:29 -> 84:57

desc_test_comments.proto > message_type[0] > enum_type[0] > value[1] > options > (testprotos.evfubaru):
   Span: 84:73 -> 84:98
   Detached Comments:
 swoosh! 

desc_test_comments.proto > message_type[0] > enum_type[0] > value[2]:
   Span: 85:17 -> 85:27
   Trailing Comments:
 peach trailer 

desc_test_comments.proto > message_type[0] > enum_type[0] > value[2] > name:
   Span: 85:17 -> 85:22

desc_test_comments.proto > message_type[0] > enum_type[0] > value[2] > number:
   Span: 85:25 -> 85:26

desc_test_comments.proto > message_type[0] > enum_type[0] > value[3]:
   Span: 85:68 -> 85:79
   Leading Comments:
 bowser leader 

desc_test_comments.proto > message_type[0] > enum_type[0] > value[3] > name:
   Span: 85:68 -> 85:74

desc_test_comments.proto > message_type[0] > enum_type[0] > value[3] > number:
   Span: 85:77 -> 85:78

desc_test_comments.proto > message_type[0] > enum_type[0] > options:
   Span: 87:17 -> 87:52

desc_test_comments.proto > message_type[0] > enum_type[0] > options > (testprotos.efubars):
   Span: 87:17 -> 87:52

desc_test_comments.proto > message_type[0] > enum_type[0] > value[4]:
   Span: 89:17 -> 89:27

desc_test_comments.proto > message_type[0] > enum_type[0] > value[4] > name:
   Span: 89:17 -> 89:22

desc_test_comments.proto > message_type[0] > enum_type[0] > value[4] > number:
   Span: 89:25 -> 89:26

desc_test_comments.proto > message_type[0] > enum_type[0] > value[5]:
   Span: 90:17 -> 90:29

desc_test_comments.proto > message_type[0] > enum_type[0] > value[5] > name:
   Span: 90:17 -> 90:24

desc_test_comments.proto > message_type[0] > enum_type[0] > value[5] > number:
   Span: 90:27 -> 90:28

desc_test_comments.proto > message_type[0] > enum_type[0] > value[6]:
   Span: 91:17 -> 91:60

desc_test_comments.proto > message_type[0] > enum_type[0] > value[6] > name:
   Span: 91:17 -> 91:24

desc_test_comments.proto > message_type[0] > enum_type[0] > value[6] > number:
   Span: 91:27 -> 91:28

desc_test_comments.proto > message_type[0] > enum_type[0] > value[6] > options:
   Span: 91:29 -> 91:59

desc_test_comments.proto > message_type[0] > enum_type[0] > value[6] > options > (testprotos.evfubarsf):
   Span: 91:30 -> 91:58

desc_test_comments.proto > message_type[0] > enum_type[0] > value[7]:
   Span: 92:17 -> 92:28

desc_test_comments.proto > message_type[0] > enum_type[0] > value[7] > name:
   Span: 92:17 -> 92:23

desc_test_comments.proto > message_type[0] > enum_type[0] > value[7] > number:
   Span: 92:26 -> 92:27

desc_test_comments.proto > message_type[0] > enum_type[0] > value[8]:
   Span: 93:17 -> 93:31

desc_test_comments.proto > message_type[0] > enum_type[0] > value[8] > name:
   Span: 93:17 -> 93:26

desc_test_comments.proto > message_type[0] > enum_type[0] > value[8] > number:
   Span: 93:29 -> 93:30

desc_test_comments.proto > message_type[0] > enum_type[0] > value[9]:
   Span: 94:17 -> 94:27

desc_test_comments.proto > message_type[0] > enum_type[0] > value[9] > name:
   Span: 94:17 -> 94:22

desc_test_comments.proto > message_type[0] > enum_type[0] > value[9] > number:
   Span: 94:25 -> 94:26

desc_test_comments.proto > message_type[0] > enum_type[0] > value[10]:
   Span: 95:17 -> 95:31

desc_test_comments.proto > message_type[0] > enum_type[0] > value[10] > name:
   Span: 95:17 -> 95:23

desc_test_comments.proto > message_type[0] > enum_type[0] > value[10] > number:
   Span: 95:26 -> 95:30

desc_test_comments.proto > message_type[0] > enum_type[0] > options:
   Span: 97:17 -> 97:50

desc_test_comments.proto > message_type[0] > enum_type[0] > options > (testprotos.efubar):
   Span: 97:17 -> 97:50

desc_test_comments.proto > message_type[0] > oneof_decl[0]:
   Span: 101:9 -> 106:10
   Leading Comments:
 can be this or that
   Trailing Comments:
 trailer for oneof abc

desc_test_comments.proto > message_type[0] > oneof_decl[0] > name:
   Span: 101:15 -> 101:18

desc_test_comments.proto > message_type[0] > field[3]:
   Span: 104:17 -> 104:33

desc_test_comments.proto > message_type[0] > field[3] > type:
   Span: 104:17 -> 104:23

desc_test_comments.proto > message_type[0] > field[3] > name:
   Span: 104:24 -> 104:28

desc_test_comments.proto > message_type[0] > field[3] > number:
   Span: 104:31 -> 104:32

desc_test_comments.proto > message_type[0] > field[4]:
   Span: 105:17 -> 105:32

desc_test_comments.proto > message_type[0] > field[4] > type:
   Span: 105:17 -> 105:22

desc_test_comments.proto > message_type[0] > field[4] > name:
   Span: 105:23 -> 105:27

desc_test_comments.proto > message_type[0] > field[4] > number:
   Span: 105:30 -> 105:31

desc_test_comments.proto > message_type[0] > oneof_decl[1]:
   Span: 108:9 -> 114:10
   Leading Comments:
 can be these or those

desc_test_comments.proto > message_type[0] > oneof_decl[1] > name:
   Span: 108:15 -> 108:18

desc_test_comments.proto > message_type[0] > oneof_decl[1] > options:
   Span: 110:17 -> 110:89

desc_test_comments.proto > message_type[0] > oneof_decl[1] > options > (testprotos.oofubar)[0]:
   Span: 110:17 -> 110:89
   Leading Comments:
 whoops?

desc_test_comments.proto > message_type[0] > field[5]:
   Span: 112:17 -> 112:34

desc_test_comments.proto > message_type[0] > field[5] > type:
   Span: 112:17 -> 112:23

desc_test_comments.proto > message_type[0] > field[5] > name:
   Span: 112:24 -> 112:29

desc_test_comments.proto > message_type[0] > field[5] > number:
   Span: 112:32 -> 112:33

desc_test_comments.proto > message_type[0] > field[6]:
   Span: 113:17 -> 113:33

desc_test_comments.proto > message_type[0] > field[6] > type:
   Span: 113:17 -> 113:22

desc_test_comments.proto > message_type[0] > field[6] > name:
   Span: 113:23 -> 113:28

desc_test_comments.proto > message_type[0] > field[6] > number:
   Span: 113:31 -> 113:32

desc_test_comments.proto > message_type[0] > field[7]:
   Span: 117:9 -> 117:40
   Leading Comments:
 map field

desc_test_comments.proto > message_type[0] > field[7] > type_name:
   Span: 117:9 -> 117:28

desc_test_comments.proto > message_type[0] > field[7] > name:
   Span: 117:29 -> 117:35

desc_test_comments.proto > message_type[0] > field[7] > number:
   Span: 117:38 -> 117:39

desc_test_comments.proto > extension:
   Span: 122:1 -> 133:2
   Detached Comments:
 And next we'll need some extensions...
   Trailing Comments:
 trailer for extend block

desc_test_comments.proto > extension[0]:
   Span: 130:9 -> 130:37
   Leading Comments:
 comment for guid1

desc_test_comments.proto > extension[0] > extendee:
   Span: 124:1 -> 124:8
   Leading Comments:
 extendee comment

desc_test_comments.proto > extension[0] > label:
   Span: 130:9 -> 130:17

desc_test_comments.proto > extension[0] > type:
   Span: 130:18 -> 130:24

desc_test_comments.proto > extension[0] > name:
   Span: 130:25 -> 130:30

desc_test_comments.proto > extension[0] > number:
   Span: 130:33 -> 130:36

desc_test_comments.proto > extension[1]:
   Span: 132:9 -> 132:37
   Leading Comments:
 ... and a comment for guid2

desc_test_comments.proto > extension[1] > extendee:
   Span: 124:1 -> 124:8

desc_test_comments.proto > extension[1] > label:
   Span: 132:9 -> 132:17

desc_test_comments.proto > extension[1] > type:
   Span: 132:18 -> 132:24

desc_test_comments.proto > extension[1] > name:
   Span: 132:25 -> 132:30

desc_test_comments.proto > extension[1] > number:
   Span: 132:33 -> 132:36

desc_test_comments.proto > message_type[1]:
   Span: 136:1 -> 136:127
   Trailing Comments:
 detached comment inside AnEmptyMessage 

desc_test_comments.proto > message_type[1] > name:
   Span: 136:36 -> 136:50
   Detached Comments:
 name leading comment 

desc_test_comments.proto > message_type[2]:
   Span: 142:1 -> 143:2
   Leading Comments:

 Tests javadoc style comment, where every line in block comment has leading
 asterisk that should be stripped.
   Trailing Comments:
 trailer for AnotherEmptyMessage 

desc_test_comments.proto > message_type[2] > name:
   Span: 142:9 -> 142:28

desc_test_comments.proto > service[0]:
   Span: 146:1 -> 172:2
   Leading Comments:
 Service comment
   Trailing Comments:
 service trailer
 that spans multiple lines

desc_test_comments.proto > service[0] > name:
   Span: 146:28 -> 146:38
   Detached Comments:
 service name 

desc_test_comments.proto > service[0] > options:
   Span: 151:9 -> 151:43

desc_test_comments.proto > service[0] > options > (testprotos.sfubar) > id:
   Span: 151:9 -> 151:43
   Leading Comments:
 option that sets field

desc_test_comments.proto > service[0] > options:
   Span: 153:9 -> 153:47

desc_test_comments.proto > service[0] > options > (testprotos.sfubar) > name:
   Span: 153:9 -> 153:47
   Leading Comments:
 another option that sets field

desc_test_comments.proto > service[0] > options:
   Span: 154:9 -> 154:35

desc_test_comments.proto > service[0] > options > deprecated:
   Span: 154:9 -> 154:35
   Trailing Comments:
 DEPRECATED!

desc_test_comments.proto > service[0] > options:
   Span: 160:9 -> 160:45

desc_test_comments.proto > service[0] > options > (testprotos.sfubare):
   Span: 160:9 -> 160:45
   Leading Comments:
*
 Another javadoc-style comment.
 This one has the double-asterisk on first line, like javadoc.

desc_test_comments.proto > service[0] > method[0]:
   Span: 163:9 -> 164:84
   Leading Comments:
 Method comment
   Trailing Comments:
 compact method trailer

desc_test_comments.proto > service[0] > method[0] > name:
   Span: 163:28 -> 163:40
   Detached Comments:
 rpc name 

desc_test_comments.proto > service[0] > method[0] > client_streaming:
   Span: 163:73 -> 163:79
   Detached Comments:
 comment B 

desc_test_comments.proto > service[0] > method[0] > input_type:
   Span: 163:96 -> 163:103
   Detached Comments:
 comment C 

desc_test_comments.proto > service[0] > method[0] > output_type:
   Span: 164:57 -> 164:64
   Detached Comments:
comment E 

desc_test_comments.proto > service[0] > method[1]:
   Span: 166:9 -> 171:10
   Trailing Comments:
 trailer for method

desc_test_comments.proto > service[0] > method[1] > name:
   Span: 166:13 -> 166:21

desc_test_comments.proto > service[0] > method[1] > input_type:
   Span: 166:23 -> 166:30

desc_test_comments.proto > service[0] > method[1] > output_type:
   Span: 166:41 -> 166:62

desc_test_comments.proto > service[0] > method[1] > options:
   Span: 168:17 -> 168:42

desc_test_comments.proto > service[0] > method[1] > options > deprecated:
   Span: 168:17 -> 168:42
   Leading Comments:
 this RPC is deprecated!

desc_test_comments.proto > service[0] > method[1] > options:
   Span: 169:17 -> 169:53

desc_test_comments.proto > service[0] > method[1] > options > (testprotos.mtfubar)[0]:
   Span: 169:17 -> 169:53

desc_test_comments.proto > service[0] > method[1] > options:
   Span: 170:17 -> 170:56

desc_test_comments.proto > service[0] > method[1] > options > (testprotos.mtfubard):
   Span: 170:17 -> 170:56
